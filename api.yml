{
  "openapi": "3.0.1",
  "info": {
    "title": "WebAPIv5",
    "version": "v1"
  },
  "paths": {
    "/api/v1/auth/auth-google": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login with google token and return a JWT token",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResultDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResultDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResultDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/change-role": {
      "post": {
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "roleName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/auth/test-message": {
      "get": {
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "message",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/posts/{postid}/comments": {
      "get": {
        "tags": [
          "Comments"
        ],
        "summary": "Get Comments",
        "parameters": [
          {
            "name": "postid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "order-by",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommentDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommentDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommentDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Comments"
        ],
        "summary": "[Authorize] [Student] Create Comment",
        "parameters": [
          {
            "name": "postid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommentDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommentDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommentDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Comments"
        ],
        "summary": "[Authorize] [>= Moderator] Delete Comment",
        "parameters": [
          {
            "name": "postid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/posts/{postid}/comments/{id}": {
      "get": {
        "tags": [
          "Comments"
        ],
        "summary": "Get Comment",
        "parameters": [
          {
            "name": "postid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CommentDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/events/{eventId}/agenda": {
      "get": {
        "tags": [
          "EventAgendas"
        ],
        "summary": "Get Event Agendas",
        "parameters": [
          {
            "name": "eventid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "order-by",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          },
          {
            "name": "start-time",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end-time",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventAgendaDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventAgendaDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventAgendaDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "EventAgendas"
        ],
        "summary": "[Authorize] [>= Moderator] Create Event Agenda",
        "parameters": [
          {
            "name": "eventid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventAgendaDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventAgendaDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventAgendaDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "EventAgendas"
        ],
        "summary": "[Authorize] [>= Moderator] Edit Event Agenda",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditEventAgendaDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditEventAgendaDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditEventAgendaDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "EventAgendas"
        ],
        "summary": "[Authorize] [>= Moderator] Delete Event Agenda",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/events/{eventId}/agenda/{id}": {
      "get": {
        "tags": [
          "EventAgendas"
        ],
        "summary": "Get Event Agenda",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EventAgendaDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventAgendaDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventAgendaDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/event-category": {
      "get": {
        "tags": [
          "EventCategory"
        ],
        "summary": "Get Categories",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventCategoryDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventCategoryDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventCategoryDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "EventCategory"
        ],
        "summary": "[Admin Only] Create Category",
        "parameters": [
          {
            "name": "categoryName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EventCategoryDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventCategoryDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventCategoryDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EventCategory"
        ],
        "summary": "[Admin Only] Edit Category",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCategory"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCategory"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EventCategory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "EventCategory"
        ],
        "summary": "[Admin Only] Delete Category",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/event-category/{id}": {
      "get": {
        "tags": [
          "EventCategory"
        ],
        "summary": "Get Category",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EventCategoryDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventCategoryDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventCategoryDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/events/{eventid}/organizers": {
      "get": {
        "tags": [
          "EventOrganizer"
        ],
        "summary": "Get Event Organizers",
        "parameters": [
          {
            "name": "eventid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventOrganizerDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventOrganizerDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventOrganizerDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "EventOrganizer"
        ],
        "summary": "[Authorize] [>= Moderator] Create Event Organizer",
        "parameters": [
          {
            "name": "eventid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventOrganizerDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventOrganizerDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventOrganizerDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "EventOrganizer"
        ],
        "summary": "[Authorize] [>= Moderator] Delete Event Organizer",
        "parameters": [
          {
            "name": "eventid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "organizerid",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/events/{eventid}/organizers/{id}": {
      "get": {
        "tags": [
          "EventOrganizer"
        ],
        "summary": "Get Event Organizer",
        "parameters": [
          {
            "name": "eventid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "organizerid",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EventOrganizerDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventOrganizerDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventOrganizerDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/events": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get Events (Default will not get DRAFT event unless set in query)",
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizer-name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category-id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "state",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EventStateEnum"
            }
          },
          {
            "name": "is-own",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is-joined",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "order-by",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          },
          {
            "name": "start-time",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end-time",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "[Admin Only] Create Event",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Events"
        ],
        "summary": "[Authorize] [>= Moderator] Edit Event",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditEventDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditEventDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditEventDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Events"
        ],
        "summary": "[Authorize] [Creator] Delete Event",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "patch": {
        "tags": [
          "Events"
        ],
        "summary": "[Authorize] [>= Moderator] Patch Event State",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchEventDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchEventDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchEventDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/events/{id}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get Event",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DetailEventDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailEventDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailEventDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/events/{eventid}/users": {
      "get": {
        "tags": [
          "EventUsers"
        ],
        "summary": "[Authorize] [> Moderator] Get Event Users",
        "parameters": [
          {
            "name": "eventid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EventUserTypeEnum"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventUserDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventUserDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventUserDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "EventUsers"
        ],
        "summary": "[Authorize] [Creator] Create Event User",
        "parameters": [
          {
            "name": "eventid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventUserDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventUserDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventUserDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "EventUsers"
        ],
        "summary": "[Authorize] [>= Moderator] Edit Event User (Edit user with role below them)",
        "parameters": [
          {
            "name": "eventid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditEventUserDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditEventUserDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditEventUserDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "EventUsers"
        ],
        "summary": "[Authorize] [Creator] Delete Event User",
        "parameters": [
          {
            "name": "eventid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/events/{eventid}/users/me": {
      "get": {
        "tags": [
          "EventUsers"
        ],
        "summary": "[Authorize] [>= Student] Get Self Event Users",
        "parameters": [
          {
            "name": "eventid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EventUserDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventUserDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventUserDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/events/{eventid}/users/{userid}": {
      "get": {
        "tags": [
          "EventUsers"
        ],
        "summary": "[Authorize] [>= Moderator] Get Event Users",
        "parameters": [
          {
            "name": "eventid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EventUserDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventUserDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventUserDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/image": {
      "post": {
        "tags": [
          "Image"
        ],
        "summary": "[Authorize] Upload Image",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Image"
        ],
        "summary": "Get Image",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/organizer": {
      "get": {
        "tags": [
          "Organizer"
        ],
        "summary": "Get Organizers",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order-by",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizerDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizerDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizerDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Organizer"
        ],
        "summary": "[Admin Only] Create Organizer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizerDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizerDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizerDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Organizer"
        ],
        "summary": "[Admin Only] Edit Organizer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditOrganizerDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditOrganizerDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditOrganizerDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Organizer"
        ],
        "summary": "[Admin Only] Delete Organizer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/organizer/{id}": {
      "get": {
        "tags": [
          "Organizer"
        ],
        "summary": "Get Organizer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizerDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizerDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizerDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/posts": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "[Authorize] Get Posts",
        "parameters": [
          {
            "name": "event-id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "title",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order-by",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Posts"
        ],
        "summary": "[Authorize] [>= Moderator] Create Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Posts"
        ],
        "summary": "[Authorize] [>= Moderator] Edit Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditPostDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditPostDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditPostDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Posts"
        ],
        "summary": "[Authorize] [>= Moderator] Delete Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/posts/{id}": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "[Authorize] Get Post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tickets": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Get Tickets",
        "parameters": [
          {
            "name": "event-id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "order-by",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TicketDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TicketDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TicketDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tickets"
        ],
        "summary": "[Authorize] [>= Moderator] Create Ticket",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTicketDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTicketDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTicketDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Tickets"
        ],
        "summary": "[Authorize] [>= Moderator] Edit Ticket",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditTicketDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditTicketDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditTicketDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Tickets"
        ],
        "summary": "[Authorize] [>= Moderator] Delete Ticket",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/tickets/{id}": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Get Ticket",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TicketDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tickets/{ticketid}/users": {
      "get": {
        "tags": [
          "TicketUser"
        ],
        "summary": "[Authorize] [>= Moderator] Get Ticket Users",
        "parameters": [
          {
            "name": "ticketid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TicketUserDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TicketUserDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TicketUserDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TicketUser"
        ],
        "summary": "[Authorize] [> Student] Create Ticket User (Buy a ticket, 1 ticket/event)",
        "parameters": [
          {
            "name": "ticketid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTicketUserDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTicketUserDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTicketUserDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/tickets/{ticketid}/users/me": {
      "get": {
        "tags": [
          "TicketUser"
        ],
        "summary": "[Authorize] [>= Student] Get Self Ticket User",
        "parameters": [
          {
            "name": "ticketid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TicketUserDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketUserDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketUserDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tickets/{ticketid}/users/{userid}": {
      "get": {
        "tags": [
          "TicketUser"
        ],
        "summary": "[Authorize] [>= Moderator] Get Ticket User",
        "parameters": [
          {
            "name": "ticketid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TicketUserDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketUserDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketUserDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "[Authorize] Get User List",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "display-name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order-by",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderByEnum"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDTO"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "[Authorize] Edit User information",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditUserDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditUserDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditUserDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/me": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "[Authorize] Get Current User Info",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/me/tickets": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "[Authorize] Get Current User Tickets",
        "parameters": [
          {
            "name": "state",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/TicketUserStateEnum"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelfTicketDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelfTicketDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelfTicketDTO"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CommentDTO": {
        "type": "object",
        "properties": {
          "post-id": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "created-date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CreateCommentDTO": {
        "required": [
          "body"
        ],
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateEventAgendaDTO": {
        "required": [
          "description",
          "end-time",
          "start-time",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "start-time": {
            "type": "string",
            "format": "date-time"
          },
          "end-time": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CreateEventDTO": {
        "required": [
          "description",
          "end-time",
          "event-category-id",
          "location",
          "multiplier-factor",
          "start-time",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "start-time": {
            "type": "string",
            "format": "date-time"
          },
          "end-time": {
            "type": "string",
            "format": "date-time"
          },
          "location": {
            "type": "string"
          },
          "multiplier-factor": {
            "type": "number",
            "format": "float"
          },
          "event-category-id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateEventOrganizerDTO": {
        "required": [
          "organizer-id"
        ],
        "type": "object",
        "properties": {
          "organizer-id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "CreateEventUserDTO": {
        "required": [
          "type",
          "user-id"
        ],
        "type": "object",
        "properties": {
          "user-id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "$ref": "#/components/schemas/EventUserTypeEnum"
          }
        },
        "additionalProperties": false
      },
      "CreateOrganizerDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "image-url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePostDTO": {
        "required": [
          "content",
          "event-id",
          "image-url",
          "title"
        ],
        "type": "object",
        "properties": {
          "event-id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "image-url": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateTicketDTO": {
        "required": [
          "cost",
          "description",
          "event-id",
          "name",
          "quantity",
          "type"
        ],
        "type": "object",
        "properties": {
          "event-id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "cost": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "maximum": 10000,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateTicketUserDTO": {
        "required": [
          "user-id"
        ],
        "type": "object",
        "properties": {
          "user-id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "DetailEventDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "start-time": {
            "type": "string",
            "format": "date-time"
          },
          "end-time": {
            "type": "string",
            "format": "date-time"
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "multiplier-factor": {
            "type": "number",
            "format": "float"
          },
          "created-date": {
            "type": "string",
            "format": "date-time"
          },
          "state": {
            "$ref": "#/components/schemas/EventStateEnum"
          },
          "organizers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizerDTO"
            },
            "nullable": true
          },
          "tickets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TicketDTO"
            },
            "nullable": true
          },
          "event-category": {
            "$ref": "#/components/schemas/EventCategoryDTO"
          }
        },
        "additionalProperties": false
      },
      "EditEventAgendaDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "start-time": {
            "type": "string",
            "format": "date-time"
          },
          "end-time": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "EditEventDTO": {
        "required": [
          "description",
          "end-time",
          "event-category-id",
          "id",
          "location",
          "multiplier-factor",
          "start-time",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "start-time": {
            "type": "string",
            "format": "date-time"
          },
          "end-time": {
            "type": "string",
            "format": "date-time"
          },
          "location": {
            "type": "string"
          },
          "multiplier-factor": {
            "type": "number",
            "format": "float"
          },
          "event-category-id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EditEventUserDTO": {
        "required": [
          "type",
          "user-id"
        ],
        "type": "object",
        "properties": {
          "user-id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "$ref": "#/components/schemas/EventUserTypeEnum"
          }
        },
        "additionalProperties": false
      },
      "EditOrganizerDTO": {
        "required": [
          "description",
          "id",
          "image-url",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "image-url": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "EditPostDTO": {
        "required": [
          "content",
          "id",
          "image-url",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "image-url": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "EditTicketDTO": {
        "required": [
          "cost",
          "description",
          "name",
          "quantity",
          "ticket-id",
          "type"
        ],
        "type": "object",
        "properties": {
          "ticket-id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "cost": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "maximum": 10000,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EditUserDTO": {
        "required": [
          "date-of-birth",
          "display-name",
          "email",
          "id",
          "image-url"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string"
          },
          "display-name": {
            "type": "string"
          },
          "date-of-birth": {
            "type": "string",
            "format": "date-time"
          },
          "image-url": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "image-url": {
            "type": "string",
            "nullable": true
          },
          "start-time": {
            "type": "string",
            "format": "date-time"
          },
          "end-time": {
            "type": "string",
            "format": "date-time"
          },
          "multiplier-factor": {
            "type": "number",
            "format": "float"
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "event-category": {
            "$ref": "#/components/schemas/EventCategory"
          },
          "event-category-id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/StatusEnum"
          },
          "state": {
            "$ref": "#/components/schemas/EventStateEnum"
          },
          "created-date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "EventAgendaDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "event-id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "start-time": {
            "type": "string",
            "format": "date-time"
          },
          "end-time": {
            "type": "string",
            "format": "date-time"
          },
          "created-date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "EventCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventCategoryDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "start-time": {
            "type": "string",
            "format": "date-time"
          },
          "end-time": {
            "type": "string",
            "format": "date-time"
          },
          "multiplier-factor": {
            "type": "number",
            "format": "float"
          },
          "created-date": {
            "type": "string",
            "format": "date-time"
          },
          "state": {
            "$ref": "#/components/schemas/EventStateEnum"
          },
          "organizers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizerDTO"
            },
            "nullable": true
          },
          "event-category": {
            "$ref": "#/components/schemas/EventCategoryDTO"
          }
        },
        "additionalProperties": false
      },
      "EventOrganizerDTO": {
        "type": "object",
        "properties": {
          "event": {
            "$ref": "#/components/schemas/EventDTO"
          },
          "organizer": {
            "$ref": "#/components/schemas/OrganizerDTO"
          },
          "created-date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "EventStateEnum": {
        "enum": [
          "draft",
          "publish",
          "delay",
          "checkingIn",
          "ongoing",
          "checkingOut",
          "ended",
          "cancelled",
          "none"
        ],
        "type": "string"
      },
      "EventUserDTO": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EventUserTypeEnum"
          },
          "user": {
            "$ref": "#/components/schemas/UserDTO"
          },
          "created-date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "EventUserTypeEnum": {
        "enum": [
          "student",
          "lecture",
          "guest",
          "speaker",
          "moderator",
          "creator",
          "none"
        ],
        "type": "string"
      },
      "LoginResultDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "display-name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "image": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderByEnum": {
        "enum": [
          "dateAscending",
          "dateDescending"
        ],
        "type": "string"
      },
      "OrganizerDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "image-url": {
            "type": "string",
            "nullable": true
          },
          "created-date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "PatchEventDTO": {
        "required": [
          "event-id",
          "event-state-enum"
        ],
        "type": "object",
        "properties": {
          "event-id": {
            "type": "string",
            "format": "uuid"
          },
          "event-state-enum": {
            "$ref": "#/components/schemas/EventStateEnum"
          }
        },
        "additionalProperties": false
      },
      "Post": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "image-url": {
            "type": "string",
            "nullable": true
          },
          "event": {
            "$ref": "#/components/schemas/Event"
          },
          "event-id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "user-id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/StatusEnum"
          },
          "created-date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "SelfTicketDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "event-id": {
            "type": "string",
            "format": "uuid"
          },
          "ticket-id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "checked-in-date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "checked-out-date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/TicketUserStateEnum"
          },
          "created-date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "StatusEnum": {
        "enum": [
          "available",
          "unavailable"
        ],
        "type": "string"
      },
      "TicketDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "event-id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "cost": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "quantity-left": {
            "type": "integer",
            "format": "int32"
          },
          "created-date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "TicketUserDTO": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserDTO"
          },
          "created-date": {
            "type": "string",
            "format": "date-time"
          },
          "checked-in-date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "checked-out-date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/TicketUserStateEnum"
          }
        },
        "additionalProperties": false
      },
      "TicketUserStateEnum": {
        "enum": [
          "idle",
          "checkedIn",
          "checkedOut",
          "ended",
          "none"
        ],
        "type": "string"
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "user-name": {
            "type": "string",
            "nullable": true
          },
          "normalized-user-name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "normalized-email": {
            "type": "string",
            "nullable": true
          },
          "email-confirmed": {
            "type": "boolean"
          },
          "password-hash": {
            "type": "string",
            "nullable": true
          },
          "security-stamp": {
            "type": "string",
            "nullable": true
          },
          "concurrency-stamp": {
            "type": "string",
            "nullable": true
          },
          "phone-number": {
            "type": "string",
            "nullable": true
          },
          "phone-number-confirmed": {
            "type": "boolean"
          },
          "two-factor-enabled": {
            "type": "boolean"
          },
          "lockout-end": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lockout-enabled": {
            "type": "boolean"
          },
          "access-failed-count": {
            "type": "integer",
            "format": "int32"
          },
          "display-name": {
            "type": "string",
            "nullable": true
          },
          "image-url": {
            "type": "string",
            "nullable": true
          },
          "created-date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UserDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "display-name": {
            "type": "string",
            "nullable": true
          },
          "image-url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "scheme": "bearer"
      }
    }
  },
  "security": [
    {
      "Bearer": [
        "Bearer"
      ]
    }
  ],
  "tags": [
    {
      "name": "TicketUser",
      "description": "Ticker - User"
    }
  ]
}